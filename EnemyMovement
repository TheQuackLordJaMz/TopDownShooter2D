public class EnemyMovement : MonoBehaviour
{
    [SerializeField] private float _speed = 3f;           // Movement speed
    [SerializeField] private float _rotationSpeed = 360f; // Degrees per second

    private Rigidbody2D _rigidbody;
    private PlayerAwarenessController _awareness;
    private Vector2 _targetDirection;

    private void Awake()
    {
        _rigidbody = GetComponent<Rigidbody2D>();
        _awareness = GetComponent<PlayerAwarenessController>();
    }

    private void FixedUpdate()
    {
        UpdateTargetDirection();
        RotateTowardTarget();
        Move();
    }

    private void UpdateTargetDirection()
    {
        _targetDirection = _awareness.awareOfPlayer
            ? _awareness.directionToPlayer
            : Vector2.zero;
    }

    private void RotateTowardTarget()
    {
        if (_targetDirection == Vector2.zero) return;

        // Calculate the desired rotation to face the target direction
        Quaternion targetRotation = Quaternion.LookRotation(Vector3.forward, _targetDirection);

        // Smoothly rotate towards the target rotation
        Quaternion newRotation = Quaternion.RotateTowards(
            transform.rotation,
            targetRotation,
            _rotationSpeed * Time.deltaTime
        );

        _rigidbody.SetRotation(newRotation);
    }

    private void Move()
    {
        // Move forward if there's a direction to move
        _rigidbody.linearVelocity = (_targetDirection == Vector2.zero)
            ? Vector2.zero
            : (Vector2)transform.up * _speed;
    }
}
